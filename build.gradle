/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.1.1/samples
 */

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
    // below plugin will enable cucumber configuration in build.gradle
    id "se.thinkcode.cucumber-runner" version "0.0.8"
}


// Versioning of dependencies
def cucumberVersion = '6.11.0'
def junitVersion = '5.7.2'
def selenideVersion = '5.24.0'
def picocontainer = '6.11.0'
def lombokVersion = '1.18.20'
def assertJVersion = '3.20.2'
def allureVersion = '2.14.0'
def slf4j = '1.7.32'
def logbackVersion = '1.2.5'


repositories {
    mavenCentral()
}

dependencies {
    implementation "io.cucumber:cucumber-java:${cucumberVersion}"
    implementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    implementation "com.codeborne:selenide:${selenideVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "io.cucumber:cucumber-picocontainer:${picocontainer}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    implementation "io.qameta.allure:allure-selenide:${allureVersion}"
    implementation "io.qameta.allure:allure-cucumber6-jvm:${allureVersion}"
    implementation "org.slf4j:slf4j-api:${slf4j}"
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation 'com.github.javafaker:javafaker:1.0.2'

}

def threadsCount = System.getProperty("threads")
def cucumberTags = System.getProperty("cucumberTags")

cucumber {
    threads = threadsCount ? threadsCount : '1'
    glue = 'classpath:steps'
    plugin = ['pretty', 'io.qameta.allure.cucumber6jvm.AllureCucumber6Jvm']
    tags = cucumberTags ? cucumberTags : ''
    name = ''
    dryRun = ''
    snippets = ''
    version = ''
    i18n = ''
    wip = ''

    featurePath = 'src/test/resources/features'
    main = 'io.cucumber.core.cli.Main'
}

allure {
    version = allureVersion
    autoconfigure = false
    aspectjweaver = true
}